#=================================================
# Description: Build ubports using GitHub Actions
# Lisence: MIT
# Contributor: 0312birdzhang
# Maintainer: Danct12
# Credit: https://github.com/P3TERX/Actions-OpenWrt
#=================================================

name: System Image Builder

on: 
  push:
    branches:
      - master
  release:
    types: [published]

jobs:

  build:
    runs-on: ubuntu-20.04

    env:
      VENDOR: xiaomi
      DEVICE: rolex
      ANDROID_ROOT: /home/runner/work/halium/
      MANIFESTURL: https://raw.githubusercontent.com/BangTuru/ubports-ci/refs/heads/master/manifest.xml

    steps:

    - name: Maximize free space
      run: |
         echo "=============================================================================="
         echo "Freeing up disk space on CI system"
         echo "=============================================================================="

         echo "Listing 100 largest packages"
         dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
         df -h
         echo "Removing large packages"
         sudo apt-get remove -y '^dotnet-.*'
         sudo apt-get remove -y '^llvm-.*'
         sudo apt-get remove -y 'php.*'
         sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
         sudo apt-get autoremove -y
         sudo apt-get clean
         df -h
         echo "Removing large directories"
         # Remove software and language runtimes we're not using
         sudo rm -rf \
         "$AGENT_TOOLSDIRECTORY" \
         /opt/google/chrome \
         /opt/microsoft/msedge \
         /opt/microsoft/powershell \
         /opt/pipx \
         /usr/lib/mono \
         /opt/ghc \
         /usr/local/julia* \
         /usr/local/lib/android \
         /usr/local/lib/node_modules \
         /usr/local/share/chromium \
         /usr/local/share/powershell \
         /usr/share/dotnet \
         /usr/share/swift \
         "/usr/local/share/boost"
         df -h
        
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Initialization environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
        openjdk-8-jdk android-tools-adb bc \
        bison build-essential curl flex g++-multilib \
        gcc-multilib gnupg gperf imagemagick lib32ncurses5-dev \
        lib32readline-dev lib32z1-dev liblz4-tool \
        libncurses5-dev libsdl1.2-dev libssl-dev \
        libxml2 libxml2-utils lzop pngcrush rsync schedtool \
        squashfs-tools xsltproc yasm zip zlib1g-dev git python3.7
        sudo docker rmi `docker images -q`
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php \
          /opt/hostedtoolcache
        mkdir -p ~/bin
        wget 'https://storage.googleapis.com/git-repo-downloads/repo' -P ~/bin
        chmod +x ~/bin/repo
        git config --global user.name "UBports Redmi 4A CI"
        git config --global user.email "thisemaildoesnotexist@exist.com"
         
    - name: Downloading source code
      run: |
        source halium.env
        mkdir -p $ANDROID_ROOT
        cd $ANDROID_ROOT
        repo init -u https://github.com/Halium/android -b halium-11.0 --depth=1
        mkdir -p $ANDROID_ROOT/.repo/local_manifests
        wget $MANIFESTURL -O $ANDROID_ROOT/.repo/local_manifests/$DEVICE.xml
        repo sync -c -j 8 --no-clone-bundle --no-tags
    
    - name: Build HAL
      run: |
        sudo apt update
        sudo apt autoremove python3 -y
        sudo apt install android-tools-mkbootimg bc bison build-essential ca-certificates cpio curl flex git kmod libssl-dev libtinfo5 python2 sudo unzip wget xz-utils -y --no-install-recommends
        sudo ln -sf python2.7 /usr/bin/python
        chmod +x build-hal.sh
        bash -x build-hal.sh
      shell: bash
    
    - name : Upload boot image
      uses: actions/upload-artifact@master
      with:
        name: hybris-boot image
        path: /home/runner/work/halium/out/target/product/rolex/hybris-boot.img

    - name : Upload boot image
      uses: actions/upload-artifact@master
      with:
        name: halium-boot image
        path: /home/runner/work/halium/out/target/product/rolex/halium-boot.img

    - name : Upload recovery image
      uses: actions/upload-artifact@master
      with:
        name: Recovery image
        path: /home/runner/work/halium/out/target/product/rolex/recovery.img

    - name : Upload system image
      uses: actions/upload-artifact@master
      with:
        name: System image
        path: /home/runner/work/halium/out/target/product/rolex/system.img
